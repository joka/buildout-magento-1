#########################################################
#
# Configuration 
# =============
#
# - configure hostnames, ports, config and log files
# - inlcudes all buildout files to build/setup the servers
# 
########################################################

[buildout]
#inlcude buildout files
extends = base.cfg
          magento_stores_conf.cfg  
    
##############################################################################
# System settings
##############################################################################

[hosts]
main = develop.sativa.jokasis.de 
test_coverage_python = test_coverage_python.develop.sativa.jokasis.de
documentation = documentation.develop.sativa.jokasis.de
webshopapi = api.develop.sativa.jokasis.de
ch_hobby = hobby.develop.sativa.jokasis.de
ch_resell = resell.develop.sativa.jokasis.de
ch_profi = profi.develop.sativa.jokasis.de
de_hobby = hobby_develop.sativa-saatgut.de
de_resell = resell_develop.sativa-saatgut.de
fr_hobby = hobby_develop.sativa-semencesbio.fr
fr_resell = resell_develop.sativa-semencesbio.fr
fr_profi = profi_develop.sativa-semencesbio.fr
nginx = 127.0.0.1
php-fpm = 127.0.0.1
redis = 127.0.0.1
 
[ports]
nginx = 9010
nginx_ssl = 9011
redis = 9004 
webshopapi = 9003
php-fpm = 9002
mysql = 9001
supervisor = 9100

[src-versions]
nginx = 1.4.0
redis = 2.6.12
php = 5.3.24
mysql-major = 5.6
mysql = ${:mysql-major}.10
#magento = 1.8.0.0-alpha1 
magento = 1.7.0.2 


[users]
mysql = ${env:UID}
php-fpm = ${env:UID}
nginx = ${env:UID}

##############################################################################
# Directories
############################################################################## 
# extends cfgrepo/config/supervisor.cfg

[settings]
etc-directory = ${buildout:directory}/etc
log-directory = ${buildout:directory}/var/log
run-directory = ${buildout:directory}/var/run
mysql-directory = ${buildout:directory}/var/mysql
webshopapi-database-directory = ${buildout:directory}/var/webshopapi_database
www-directory = ${buildout:directory}/var/www
mode = 0700

##############################################################################
# Mysql configuration 
##############################################################################
# extends cfgrepo/config/mysql-conf.cfg

[mysql-cnf]
output = ${settings:etc-directory}/mysql.cnf
input = ${settings:etc-directory}/mysql.cnf.in

##############################################################################
# PHP configuration 
##############################################################################
# extends cfgrepo/config/php-conf.cfg
 
[php-fpm.conf]
output = ${settings:etc-directory}/php-fpm.conf
input = ${settings:etc-directory}/php-fpm.conf.in
max_children = 1

[php.ini]
output = ${settings:etc-directory}/php.ini
input = ${settings:etc-directory}/php.ini.in

##############################################################################
# Magento configuration
##############################################################################
# extends cfgrepo/config/magento.cfg
# extends magento_stores_conf.cfg
# modify magento_stores_conf.cfg to configure stores and websites

[magento-conf]
admin_name = admin
admin_password = WlqMEHrHcXHk2
admin_email = joka@jokasis.de
currency = CHF
locale = de_CH
global_baseurl = http://${hosts:main}
global_secure_baseurl = http://${hosts:main}
websites_conf = 
  ${website_base:conf}
  ${ch_website:conf}
  ${fr_website:conf}
  ${de_website:conf}
  ${it_website:conf}
stores_conf = 
  ${store_default:conf}
  ${store_admin:conf}
  ${store_hobby_de_ch:conf}
  ${store_hobby_it_ch:conf}
  ${store_hobby_fr_ch:conf}
  ${store_resell_de_ch:conf}
  ${store_resell_it_ch:conf}
  ${store_resell_fr_ch:conf}
  ${store_profi_de_ch:conf}
  ${store_profi_it_ch:conf}
  ${store_profi_fr_ch:conf}

[modman-extensions]
extensions =
# developer
    clone|https://github.com/madalinoprea/magneto-debug.git
    clone|https://github.com/IvanChepurnyi/EcomDev_PHPUnit.git
    link|${buildout:directory}/src/third_party_extensions/developer_manual
# basic
    link|${buildout:directory}/src/third_party_extensions/Credis
    link|${buildout:directory}/src/redis_cache 
    link|${buildout:directory}/src/redis_session 
    link|${buildout:directory}/src/organicseeds_profile
    link|${buildout:directory}/src/organicseeds_sorte
    link|${buildout:directory}/src/organicseeds_paymentsativa
    link|${buildout:directory}/src/autoshipping 
# theme
    link|${buildout:directory}/src/organicseeds_theme
    link|${buildout:directory}/src/third_party_extensions/RemoveCustomerAccountLinks
# payment
    link|${buildout:directory}/src/payone 
    link|${buildout:directory}/src/invoice
    link|${buildout:directory}/src/debit
    link|${buildout:directory}/src/third_party_extensions/Magento-CashOnDelivery
# translation
    link|${buildout:directory}/src/germansetup 
    link|${buildout:directory}/src/organicseeds_translations/de_DE
    link|${buildout:directory}/src/organicseeds_translations/de_CH 
    link|${buildout:directory}/src/organicseeds_translations/fr_FR 
    link|${buildout:directory}/src/organicseeds_translations/fr_CH 
    link|${buildout:directory}/src/organicseeds_translations/it_IT 
    link|${buildout:directory}/src/organicseeds_translations/it_CH 

##############################################################################
# Nginx configuration (Webserver)
############################################################################## 
# extends cfgrepo/config/nginx-conf.cfg

# global configuration
[nginx-conf]
output = ${settings:etc-directory}/nginx.conf
input = ${settings:etc-directory}/nginx.conf.in
upstreams =
    upstream php-fpm {
        server ${hosts:php-fpm}:${ports:php-fpm};
        #keepalive 32;
    }
    upstream webhopapi {
        server 127.0.0.1:${ports:webshopapi};
    }   
servers = 
    ${nginx-server-webshopapi:servers}
    ${nginx-server-documentation:servers}
    ${nginx-server-htmlconverage:servers}
    ${nginx-magento-server-main:servers}
    ${nginx-magento-server-hobby:servers}
    ${nginx-magento-server-profi:servers}
    ${nginx-magento-server-resell:servers}

# server configurations
[nginx-server-webshopapi]
<= nginx-server-base-config
server_name = ${hosts:webshopapi}
fastcgi_pass = webhopapi 
locations = 
 location / {
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    
    client_body_buffer_size 128k;
    proxy_buffering         off;
    proxy_temp_file_write_size 64k;
    proxy_pass http://${:fastcgi_pass};
    proxy_redirect          off;     
 }

[nginx-server-documentation]
<= nginx-server-base-config
document-root = ${buildout:directory}/docs/html
server_name = ${hosts:documentation}
 
[nginx-server-htmlconverage]
<= nginx-server-base-config
document-root = ${buildout:directory}/var/test_coverage_python
server_name = ${hosts:test_coverage_python}

[nginx-magento-server-main]
<= nginx-magento-server-base
server_name = ${hosts:main}

[nginx-magento-server-hobby]
<= nginx-magento-server-base
run_code = de_ch_hobby
server_name = ${hosts:ch_hobby}

[nginx-magento-server-profi]
<= nginx-magento-server-base
run_code = de_ch_profi
server_name = ${hosts:ch_profi}

[nginx-magento-server-resell]
<= nginx-magento-server-base
run_code = de_ch_resell 
server_name = ${hosts:ch_resell}

# templates for server configurations
[nginx-magento-server-base]
<= nginx-server-base-config
run_code = default
run_type = store
developer_mode = false
fastcgi_additional = 
    fastcgi_param MAGE_RUN_CODE ${:run_code}; # Store code is defined in administration > Configuration > Manage Stores
    fastcgi_param MAGE_RUN_TYPE ${:run_type};  
    fastcgi_param MAGE_IS_DEVELOPER_MODE ${:developer_mode};  
locations = 
 location / {
    index index.html index.php; # serve basic files 
    try_files $uri $uri/ @handler; # redirect to hanlder
    expires 30d; # enable cache
  }
  # hide internal files
  location ^~ /(app|includes|lib|media/downloadable|pkginfo|report/config.xml|var)/ { internal; }
  location /var/export/ { internal; }
  location /. { return 404; }
  # pass uris to magentos front end handler
  location @handler { rewrite / /index.php; }
  location ~* .php/ { rewrite ^(.*.php)/ $1 last; }
  # pass uris to magento api 
  location /api { rewrite ^/api/rest /api.php?type=rest; }
  # proxy front end handler 
  location ~* .php$ {
    if (!-e $request_filename) { rewrite / /index.php last; } #catch 404
    expires off; # disable cache for dynamic content
    fastcgi_pass php-fpm; # proxy to php-fpm
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include ${nginx-build:location}/conf/fastcgi_params;
    ${:fastcgi_additional}
  }
 
##############################################################################
# Webhshop api python configuration
##############################################################################

[settings]
paths += 
  ${:webshopapi-database-directory}

[webshop_api]
recipe = zc.recipe.egg
eggs = 
    pyramid_exclog
    pyramid
    organicseeds_webshop_api 
    yaml2json
interpreter = webshop_api_py
scripts = 
    magento_schnittstellepy
    yaml2json
    pserve
supervisor-priority = 60
supervisor-program = 
    [program:webshop_api]
    command = ${buildout:bin-directory}/pserve ${webshop_api_conf:output}
    process_name = webshop_api
    directory = ${buildout:bin-directory}
    priority = ${:supervisor-priority}
    stdout_logfile = ${settings:log-directory}/webshopapi-supervisor.log
    redirect_stderr = true
    stderr_logfile=NONE
 
[webshop_api_conf]
recipe = collective.recipe.template   
input = ${settings:etc-directory}/webshopapi.conf.in
output = ${settings:etc-directory}/webshopapi.conf
mode = 600
magento_api_url = ${magento-conf:global_baseurl}/ 
magento_rpc_user = webshop_api
magento_rpc_secret = oxXCcvIAhdXcw

[webshop_api_build_docs]
# run bin/webshop_api_build_docs to generate the api documentation
recipe =  collective.recipe.sphinxbuilder
build = ${buildout:directory}/docs
source = ${buildout:directory}/docs
outputs = html pdf
eggs = organicseeds_webshop_api
       roman
       sphinxcontrib-seqdiag
       sphinxcontrib-blockdiag

[pytest]
# see also .coveragerc, http://nedbatchelder.com/code/coverage/config.html
recipe = zc.recipe.egg:scripts
eggs =
    organicseeds_webshop_api [test]
    Scio
    pytest
    pytest-pep8
    ipdb
arguments = ['src/organicseeds_webshop_api', ]
            + sys.argv[1:]

##############################################################################
# Set up supervisor to run it all
##############################################################################
    
[supervisor-conf]
programs =
    ${mysql-cnf:supervisor-program}
    ${php-fpm.conf:supervisor-program}
    ${nginx-conf:supervisor-program}
    ${webshop_api:supervisor-program}
    ${redis-cnf:supervisor-program}

