################################################################### 
# This is a very basic template for supervisord.
# Normally you need copy this template and build your own one.
#
# It serves the following buildout part
# - supervisor-conf
################################################################### 

# details document: 
# http://www.supervisord.org/configuration.html#supervisord-section-values
[supervisord]
childlogdir = ${settings:log-directory}
logfile = ${:logfile}
logfile_maxbytes = 50MB
logfile_backups = 10
loglevel = ${:loglevel}
pidfile = ${:pidfile}
umask = 022
nodaemon = ${:nodaemon}
nocleanup = ${:nocleanup} 

[inet_http_server]
port = ${:port}
username = ${:username}
password = ${:password}

[supervisorctl]
serverurl = http://${:port}
username = ${:username}
password = ${:password} 

[rpcinterface:supervisor]
supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface

########
# Here we setup the programs.
# check the part supervisor-conf for samples.
########
${:programs}

# you may also add programs from any buildout part.
# for example.
# $ {nginx-conf:supervisor-program}

########
# following are some brief explaination for the supervisor settings.
########
#[program:theprogramname]
#command=/bin/cat              ; the program (relative uses PATH, can take args)
#process_name=%(program_name)s ; process_name expr (default %(program_name)s)
#numprocs=1                    ; number of processes copies to start (def 1)
#directory=/tmp                ; directory to cwd to before exec (def no cwd)
#umask=022                     ; umask for process (default None)
#priority=999                  ; the relative start priority (default 999)
#autostart=true                ; start at supervisord start (default: true)
#autorestart=true              ; retstart at unexpected quit (default: true)
#startsecs=10                  ; number of secs prog must stay running (def. 1)
#startretries=3                ; max # of serial start failures (default 3)
#exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)
#stopsignal=QUIT               ; signal used to kill process (default TERM)
#stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
#user=chrism                   ; setuid to this UNIX account to run the program
#redirect_stderr=true          ; redirect proc stderr to stdout (default false)
#stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
#stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
#stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
#stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
#stdout_events_enabled=false   ; emit events on stdout writes (default false)
#stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
#stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
#stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
#stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
#stderr_events_enabled=false   ; emit events on stderr writes (default false)
#environment=A=1,B=2           ; process environment additions (def no adds)
#serverurl=AUTO                ; override serverurl computation (childutils)

# The below sample eventlistener section shows all possible
# eventlistener subsection values, create one or more 'real'
# eventlistener: sections to be able to handle event notifications
# sent by supervisor.

#[eventlistener:theeventlistenername]
#command=/bin/eventlistener    ; the program (relative uses PATH, can take args)
#process_name=%(program_name)s ; process_name expr (default %(program_name)s)
#numprocs=1                    ; number of processes copies to start (def 1)
#events=EVENT                  ; event notif. types to subscribe to (req'd)
#buffer_size=10                ; event buffer queue size (default 10)
#directory=/tmp                ; directory to cwd to before exec (def no cwd)
#umask=022                     ; umask for process (default None)
#priority=-1                   ; the relative start priority (default -1)
#autostart=true                ; start at supervisord start (default: true)
#autorestart=unexpected        ; restart at unexpected quit (default: unexpected)
#startsecs=10                  ; number of secs prog must stay running (def. 1)
#startretries=3                ; max # of serial start failures (default 3)
#exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)
#stopsignal=QUIT               ; signal used to kill process (default TERM)
#stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
#user=chrism                   ; setuid to this UNIX account to run the program
#redirect_stderr=true          ; redirect proc stderr to stdout (default false)
#stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
#stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
#stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
#stdout_events_enabled=false   ; emit events on stdout writes (default false)
#stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
#stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
#stderr_logfile_backups        ; # of stderr logfile backups (default 10)
#stderr_events_enabled=false   ; emit events on stderr writes (default false)
#environment=A=1,B=2           ; process environment additions
#serverurl=AUTO                ; override serverurl computation (childutils)

# The below sample group section shows all possible group values,
# create one or more 'real' group: sections to create "heterogeneous"
# process groups.

#[group:thegroupname]
#programs=progname1,progname2  ; each refers to 'x' in [program:x] definitions
#priority=999                  ; the relative start priority (default 999)

# The [include] section can just contain the "files" setting.  This
# setting can list multiple files (separated by whitespace or
# newlines).  It can also contain wildcards.  The filenames are
# interpreted as relative to this file.  Included files *cannot*
# include files themselves.

#[include]
#files = relative/directory/*.ini
